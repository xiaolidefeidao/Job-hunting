window.addEventListener("message",function(event){    
	if(event.origin !="http://sender:port"){
		console.log("the event doesn't come from sender!");
		return;｝
	//操作数据event.data
	//更新DOM
｝,false     //参数useCapture控制触发顺序，默认值为false.
			//事件流的三个阶段：捕获阶段、目标阶段、冒泡阶段。在节点中true（在捕获阶段触发）总比false（在冒泡阶段触发）先触发
｝
事件代理：
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>事件代理</title>
</head>
<body>
<ul id="1">
    <li id="post-1">Item 1</li>
    <li id="post-2">Item 2</li>
    <li id="post-3">Item 3</li>
    <li id="post-4">Item 4</li>
</ul>
<script>
    var test = document.getElementById("1");
    console.log(test);
    test.addEventListener("click", function (e) {
        // 检查事件源e.targe是否为Li
        console.log(e.target.nodeName);//LI
        if (e.target && e.target.nodeName.toUpperCase() == "LI") {
            // 真正的处理过程在这里
            console.log(e.target.id + " was clicked!");//点击post-4时：post-4 was clicked!
        }
    });
</script>
</body>
</html>
